//Bootstrap Code
@256
D=A
@SP
M=D

//CallSys.init0 (push return add, save frame, repoint ARG and LCL) 
@Sys.init.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D

//goto Sys.init
@Sys.init
0;JMP

 //Return Address Label
(Sys.init.0)

 //function Class1.set 0
(Class1.set)

//PUSH argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

//POP static 0
@SP
AM=M-1
D=M
@Class1.0
M=D

//PUSH argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

//POP static 1
@SP
AM=M-1
D=M
@Class1.1
M=D

//PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

//Return 
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAdd
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@retAdd
A=M
0;JMP

 //function Class1.get 0
(Class1.get)

//PUSH static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1

//PUSH static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1

// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D

//Return 
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAdd
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@retAdd
A=M
0;JMP

 //function Class2.set 0
(Class2.set)

//PUSH argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

//POP static 0
@SP
AM=M-1
D=M
@Class2.0
M=D

//PUSH argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

//POP static 1
@SP
AM=M-1
D=M
@Class2.1
M=D

//PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

//Return 
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAdd
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@retAdd
A=M
0;JMP

 //function Class2.get 0
(Class2.get)

//PUSH static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1

//PUSH static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1

// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D

//Return 
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAdd
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@retAdd
A=M
0;JMP

 //function Sys.init 0
(Sys.init)

//PUSH constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1

//PUSH constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1

//CallClass1.set2 (push return add, save frame, repoint ARG and LCL) 
@Class1.set.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D

//goto Class1.set
@Class1.set
0;JMP

 //Return Address Label
(Class1.set.1)

//POP temp 0
@SP
AM=M-1
D=M
@5
M=D

//PUSH constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1

//PUSH constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1

//CallClass2.set2 (push return add, save frame, repoint ARG and LCL) 
@Class2.set.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D

//goto Class2.set
@Class2.set
0;JMP

 //Return Address Label
(Class2.set.2)

//POP temp 0
@SP
AM=M-1
D=M
@5
M=D

//CallClass1.get0 (push return add, save frame, repoint ARG and LCL) 
@Class1.get.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D

//goto Class1.get
@Class1.get
0;JMP

 //Return Address Label
(Class1.get.3)

//CallClass2.get0 (push return add, save frame, repoint ARG and LCL) 
@Class2.get.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D

//goto Class2.get
@Class2.get
0;JMP

 //Return Address Label
(Class2.get.4)

//Label WHILE
(WHILE)

//goto WHILE
@WHILE
0;JMP

//END LOOP
(END)
@END
0;JMP