<class>
	<keyword> class <keyword>
	<IDENTIFIER> Main <IDENTIFIER>
	<symbol> { <symbol>
	<classVarDec>
		<keyword> static <keyword>
		<keyword> boolean <keyword>
		<IDENTIFIER> test <IDENTIFIER>
		<symbol> , <symbol>
		<IDENTIFIER> bleh <IDENTIFIER>
		<symbol> ; <symbol>
	</classVarDec>
	<subroutineDec>
		<keyword> function <keyword>
		<keyword> void <keyword>
		<IDENTIFIER> main <IDENTIFIER>
		<symbol> ( <symbol>
		<ParameterList>
		</ParameterList>
		<symbol> ) <symbol>
		<SubroutineBody>
			<symbol> { <symbol>
			<VarDec>
				<keyword> var <keyword>
				<IDENTIFIER> SquareGame <IDENTIFIER>
				<IDENTIFIER> game <IDENTIFIER>
				<symbol> ; <symbol>
			</VarDec>
			<statements>
				<letStatement>
					<keyword> let <keyword>
					<IDENTIFIER> game <IDENTIFIER>
					<symbol> = <symbol>
					<expression>
						<IDENTIFIER> game <IDENTIFIER>
					</expression>
					<symbol> ; <symbol>
				</letStatement>
				<doStatement>
					<keyword> do <keyword>
					<IDENTIFIER> game <IDENTIFIER>
					<symbol> . <symbol>
					<IDENTIFIER> run <IDENTIFIER>
					<symbol> ( <symbol>
					<symbol> ) <symbol>
					<symbol> ; <symbol>
				</doStatement>
				<doStatement>
					<keyword> do <keyword>
					<IDENTIFIER> game <IDENTIFIER>
					<symbol> . <symbol>
					<IDENTIFIER> dispose <IDENTIFIER>
					<symbol> ( <symbol>
					<symbol> ) <symbol>
					<symbol> ; <symbol>
				</doStatement>
				<returnStatement>
					<keyword> return <keyword>
					<symbol> ; <symbol>
				</returnStatement>
			</statements>
			<symbol> } <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword> function <keyword>
		<keyword> void <keyword>
		<IDENTIFIER> test <IDENTIFIER>
		<symbol> ( <symbol>
		<ParameterList>
		</ParameterList>
		<symbol> ) <symbol>
		<SubroutineBody>
			<symbol> { <symbol>
			<VarDec>
				<keyword> var <keyword>
				<keyword> int <keyword>
				<IDENTIFIER> i <IDENTIFIER>
				<symbol> , <symbol>
			</VarDec>
			<statements>
			</statements>
			<symbol> ; <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword> var <keyword>
		<IDENTIFIER> String <IDENTIFIER>
		<IDENTIFIER> s <IDENTIFIER>
		<symbol> ; <symbol>
		<ParameterList>
			<keyword> var <keyword>
			<IDENTIFIER> Array <IDENTIFIER>
			<IDENTIFIER> a <IDENTIFIER>
		</ParameterList>
		<keyword> if <keyword>
		<SubroutineBody>
			<symbol> ( <symbol>
			<statements>
			</statements>
			<symbol> ) <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<symbol> { <symbol>
		<keyword> let <keyword>
		<IDENTIFIER> s <IDENTIFIER>
		<symbol> = <symbol>
		<ParameterList>
		</ParameterList>
		<symbol> ; <symbol>
		<SubroutineBody>
			<keyword> let <keyword>
			<statements>
			</statements>
			<symbol> = <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<IDENTIFIER> j <IDENTIFIER>
		<symbol> ; <symbol>
		<keyword> let <keyword>
		<IDENTIFIER> a <IDENTIFIER>
		<ParameterList>
		</ParameterList>
		<IDENTIFIER> i <IDENTIFIER>
		<SubroutineBody>
			<symbol> ] <symbol>
			<statements>
			</statements>
			<IDENTIFIER> j <IDENTIFIER>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<symbol> ; <symbol>
		<symbol> } <symbol>
		<keyword> else <keyword>
		<symbol> { <symbol>
		<ParameterList>
			<keyword> let <keyword>
			<IDENTIFIER> i <IDENTIFIER>
			<symbol> = <symbol>
		</ParameterList>
		<symbol> ; <symbol>
		<SubroutineBody>
			<keyword> let <keyword>
			<statements>
			</statements>
			<symbol> = <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<IDENTIFIER> j <IDENTIFIER>
		<symbol> ; <symbol>
		<keyword> let <keyword>
		<IDENTIFIER> i <IDENTIFIER>
		<ParameterList>
		</ParameterList>
		<IDENTIFIER> i <IDENTIFIER>
		<SubroutineBody>
			<symbol> ; <symbol>
			<symbol> } <symbol>
		</SubroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword> return <keyword>
		<symbol> ; <symbol>
		<symbol> } <symbol>
		<symbol> } <symbol>
		<ParameterList>
		</ParameterList>
		<symbol>  <symbol>
		<SubroutineBody>
			<symbol>  <symbol>
			<statements>
			</statements>
			<symbol>  <symbol>
		</SubroutineBody>
	</subroutineDec>
	<symbol>  <symbol>
</class>
