<class>
	<keyword> class </keyword>
	<identifier> SquareGame </identifier>
	<symbol> { </symbol>
	<classVarDec>
		<keyword> field </keyword>
		<identifier> Square </identifier>
		<identifier> square </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> field </keyword>
		<keyword> int </keyword>
		<identifier> direction </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<subroutineDec>
		<keyword> constructor </keyword>
		<identifier> SquareGame </identifier>
		<identifier> new </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<identifier> square </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> Square </identifier>
							<symbol> . </symbol>
							<identifier> new </identifier>
							<symbol> ( </symbol>
							<expressionList>
								<expression>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> , </symbol>
								<expression>
									<term>
										<symbol> , </symbol>
										<term>
											<integerConstant> 0 </integerConstant>
										</term>
									</term>
								</expression>
							</expressionList>
							<integerConstant> 30 </integerConstant>
						</term>
					</expression>
					<symbol> ) </symbol>
				</letStatement>
			</statements>
			<symbol> ; </symbol>
		</subroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword> let </keyword>
		<identifier> direction </identifier>
		<symbol> = </symbol>
		<integerConstant> 0 </integerConstant>
		<parameterList>
		</parameterList>
		<keyword> return </keyword>
		<subroutineBody>
			<keyword> this </keyword>
			<statements>
			</statements>
			<symbol> ; </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
